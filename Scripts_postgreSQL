CREATE TABLE aluno(
    id SERIAL primary key,
        nome VARCHAR(255),
        cpf CHAR(11),
        observacao TEXT,
        idade INTEGER,
        dinheiro NUMERIC(10,2),
        altura REAL,
        ativo BOOLEAN,
        data_nascimento DATE,
        hora_aula TIME,
        data_hora_matricula TIMESTAMP
);


insert into ALUNO(

nome,cpf,observacao,idade,dinheiro,altura,ativo,data_nascimento,hora_aula,data_hora_matricula


)Values(

	'Enrico',
	'222222222',
	'Loren',
	 19,
	 100.4,
	 1.81,
	 TRUE,
	 '2003-12-02',
	 '12:00:00',
	 '2022-01-01 13:00:00' 
);


insert into aluno (nome) values ('Isabela Lopes');
insert into aluno (nome) values ('Lebron James');
insert into aluno (nome) values ('SONECA ROX');
insert into aluno (nome) values ('Diguinho ROX');
insert into aluno (nome) values ('Fabio Malachini');
insert into aluno (nome) values ('Cristiano Ronaldo');

select * from aluno where nome = 'Enrico'

select * from aluno where nome !='Enrico'

select * from aluno where nome LIKE 'Enrico'

select * from aluno where nome LIKE 'Lebron%'

select * from aluno where nome LIKE '%Malachini'

select * from aluno where nome LIKE '%R_X'

select * from aluno where nome Not LIKE 'Isa%'

select * from aluno where nome LIKE '%r%'

select * from aluno where nome LIKE '%a%o%'


select * from aluno where idade is not NULL

select * from aluno where idade is Null

select * from aluno where idade between 12 and 30

select * from aluno where idade is Null and nome is not Null


select * from aluno where idade is Null or idade between 10 and 20

select * from aluno where nome  like '%n%' and idade is Null 


create table Curso(
ID Serial primary Key,
	nome varchar (255) Not Null
	
);


Insert into Curso(
nome
)values(
'Analise de Sistemas'
),('Banco de dados'),('Big Data'),('CC');


create table Aluno_Curso(
	aluno_id Integer,curso_id integer,
	
	primary key (aluno_id, curso_id),
	
	foreign key (aluno_id)
	references aluno (id)
	on delete cascade
	on update cascade,
						
						
	foreign key (curso_id)
	references curso(id)				
);

insert into aluno_curso(aluno_id,curso_id)values(1,1),(2,3),(3,2);

update aluno_curso set aluno_id = 4, curso_id = 1 where aluno_curso.aluno_id = 1


select aluno.id as "ID do Aluno",aluno.nome as "NOME DO ALUNO",curso.nome as "NOME DO CURSO"
from Aluno 
Join aluno_curso on aluno_curso.aluno_id = aluno.id
Join curso on aluno_curso.curso_id = curso.id
Order by aluno.nome


select aluno.nome as  "Nome do Aluno",curso.nome as  "Nome do Curso"
from aluno
Left join aluno_curso on aluno.id = aluno_curso.aluno_id
Left join curso on curso.id = aluno_curso.curso_id
Order by 1,2

select aluno.nome as  "Nome do Aluno",curso.nome as  "Nome do Curso"
from aluno
right join aluno_curso on aluno.id = aluno_curso.aluno_id
right join curso on curso.id = aluno_curso.curso_id
order by aluno.nome,curso.nome

select aluno.nome as  "Nome do Aluno",curso.nome as  "Nome do Curso"
from aluno
full join aluno_curso on aluno.id = aluno_curso.aluno_id
Full join curso on curso.id = aluno_curso.curso_id
order by 2


Delete from aluno where aluno.id = 2

update aluno 
	set id = 10
	where id = 2




CREATE TABLE Professores(
    id SERIAL PRIMARY KEY,
    matricula VARCHAR(10) Not NULL,
    nome VARCHAR(255) Not NULL,
    sobrenome VARCHAR(255)Not NULL
);

INSERT INTO Professores (matricula, nome, sobrenome) VALUES ('M001', 'Diogo', 'Mascarenhas');
INSERT INTO Professores (matricula, nome, sobrenome) VALUES ('M002', 'Vinícius', 'Dias');
INSERT INTO Professores (matricula, nome, sobrenome) VALUES ('M003', 'Nico', 'Steppat');
INSERT INTO Professores (matricula, nome, sobrenome) VALUES ('M004', 'João', 'Roberto');
INSERT INTO Professores (matricula, nome, sobrenome) VALUES ('M005', 'Diogo', 'Mascarenhas');
INSERT INTO Professores (matricula, nome, sobrenome) VALUES ('M006','Alberto', 'Martins');


select professores.nome, professores.matricula from
professores order by 2
limit 3
offset 2;


select count(professores.id),sum(professores.id),max(professores.id),
min(professores.id),Round(avg(professores.id),2) 
from professores


select 
nome,sobrenome, 
count(*) as Quantidades 

from professores
group by 1,2
order by 1;


insert into aluno_curso (aluno_id,curso_id) values (5,3)

select curso.nome,count(aluno.nome) from curso
	join aluno_curso on aluno_curso.curso_id = curso.id
		join aluno on aluno.id = aluno_curso.aluno_id
		group by 1
		order by 1


select curso.nome, count(aluno.nome) from curso
	left join aluno_curso on aluno_curso.curso_id = curso.id 
	left join aluno on aluno_curso.aluno_id = aluno.id 
	group by 1
	having count(aluno.nome) = 0




select professores.nome, count(professores.nome) as "Quantidade" from professores
	group by 1
	having count(professores.nome) > 1



select * from Professores;

select * from Aluno_Curso;

select * from Curso

select * from aluno